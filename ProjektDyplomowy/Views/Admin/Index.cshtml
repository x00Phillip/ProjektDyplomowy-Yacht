﻿<div class="manage-sections">

    @if (User.IsInRole("Admin"))
    {
        <!-- Przycisk do zarządzania samochodami -->
        <button class="btn btn-primary" id="manageYachtsBtn">Yacht Management</button>
        <!-- Przycisk do zarządzania lokalizacjami -->
        <button class="btn btn-primary" id="manageLocationBtn">Location Management</button>
        <!-- Przycisk do zarządzania użytkownikami -->
        <button class="btn btn-primary" id="manageUsersBtn">User Management</button>
        
    }
    <!-- Przycisk do zarządzania rezerwacjami -->
    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
    {
        <button class="btn btn-primary" id="manageRentalsBtn">Rental Management</button>
    }

</div>

<!-- Sekcja na dane, które się zmieniają po kliknięciu w jeden z przycisków -->
<div id="dataContainer">
    <!-- Tutaj będą wyświetlane odpowiednie listy (np. Yachts, Users, Rentals) -->
</div>


@section Scripts {
    <script>
        // Załaduj listy (jachty, użytkownicy, rezerwacje, lokalizacje)
        $(document).ready(function () {
            // Obsługa przycisku "Manage Yachts"
            $('#manageYachtsBtn').click(function () {
                $('#dataContainer').load('@Url.Action("Yachts", "Admin")');
            });
            // Obsługa przycisku "Manage Locations"
            $('#manageLocationBtn').click(function () {
                $('#dataContainer').load('@Url.Action("YachtLocations", "Admin")');
            });

            // Obsługa przycisku "Manage Users"
            $('#manageUsersBtn').click(function () {
                $('#dataContainer').load('@Url.Action("Users", "Admin")');
            });

            // Obsługa przycisku "Manage Rentals"
            $('#manageRentalsBtn').click(function () {
                $('#dataContainer').load('@Url.Action("Rentals", "Admin")');
            });

            // Obsługa kliknięcia w link "Add Yacht"
            $(document).on('click', '#add-yacht-link', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony

                // Wywołanie żądania GET do kontrolera Admin/CreateCar
                $.get('@Url.Action("CreateYacht", "Admin")', function (data) {
                    $('#dataContainer').html(data); // Załaduj formularz do kontenera
                }).fail(function () {
                    alert("Failed to load the form. Please try again.");
                });
            });

            // Obsługa wysyłania formularza dodawania jachtu
            $(document).on('submit', '#yachtCreateForm', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony
                const form = $(this);

                // Wysłanie formularza jako POST
                $.post(form.attr('action'), form.serialize(), function (response) {
                    // Po dodaniu jachtu, załaduj zaktualizowaną tabelę jachtów
                    $.get('@Url.Action("Yachts", "Admin")', function (data) {
                        $('#dataContainer').html(data); // Załaduj listę jachtów po dodaniu
                    }).fail(function () {
                        alert("Failed to load updated car list.");
                    });
                }).fail(function (response) {
            let errorMessages = '';
            if (response.responseJSON) {
                const errors = response.responseJSON;
                for (const field in errors) {
                    if (errors.hasOwnProperty(field)) {
                        errorMessages += errors[field].join('<br/>') + '<br/>';
                    }
                }
            } else {
                errorMessages = "Unknown error occurred.";
            }
            alert("There were errors:\n" + errorMessages);
        });
            });
            // Obsługa kliknięcia w link "Add Location"
            $(document).on('click', '#add-location-link', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony

                // Wywołanie żądania GET do kontrolera Admin/CreateYacht
                $.get('@Url.Action("CreateYachtLocation", "Admin")', function (data) {
                    $('#dataContainer').html(data); // Załaduj formularz do kontenera
                }).fail(function () {
                    alert("Failed to load the form. Please try again.");
                });
            });
            // Obsługa wysyłania formularza dodawania lokalizacji
            $(document).on('submit', '#locationCreateForm', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony
                const form = $(this);

                // Wysłanie formularza jako POST
                $.post(form.attr('action'), form.serialize(), function (response) {
                    // Po dodaniu lokalizacji, załaduj zaktualizowaną tabelę lokalizacji
                    $.get('@Url.Action("YachtLocations", "Admin")', function (data) {
                        $('#dataContainer').html(data); // Załaduj listę lokalizacji po dodaniu
                    }).fail(function () {
                        alert("Failed to load updated location list.");
                    });
                }).fail(function (response) {
                    // Jeśli formularz nie przeszedł walidacji, wyświetl błędy
                    const errors = response.responseJSON;
                    let errorMessages = '';
                    if (Array.isArray(errors)) {
                    errorMessages = errors.join('<br/>');
                    } else {
                        for (const field in errors) {
                            if (errors.hasOwnProperty(field)) {
                                errorMessages += errors[field] + '<br/>';
                            }
                        }
                    }
                    alert("There were errors:\n" + errorMessages);
                });
            });
            // Obsługa kliknięcia w link "Add User"
            $(document).on('click', '#add-user-link', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony

                // Wywołanie żądania GET do kontrolera Admin/CreateUser
                $.get('@Url.Action("CreateUser", "Admin")', function (data) {
                    $('#dataContainer').html(data); // Załaduj formularz do kontenera
                }).fail(function () {
                    alert("Failed to load the form. Please try again.");
                });
            });
            // Obsługa wysyłania formularza dodawania użytkownika
            $(document).on('submit', '#userCreateForm', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony
                const form = $(this);

                // Wysłanie formularza jako POST
                $.post(form.attr('action'), form.serialize(), function (response) {
                    // Po dodaniu samochodu, załaduj zaktualizowaną tabelę użytkowników
                    $.get('@Url.Action("Users", "Admin")', function (data) {
                        $('#dataContainer').html(data); // Załaduj listę użytkowników po dodaniu
                    }).fail(function () {
                        alert("Failed to load updated user list.");
                    });
                }).fail(function (response) {
                    // Jeśli formularz nie przeszedł walidacji, wyświetl błędy
                    const errors = response.responseJSON;
                    let errorMessages = '';
                    for (const field in errors) {
                        if (errors.hasOwnProperty(field)) {
                            errorMessages += errors[field].join('<br/>');
                        }
                    }
                    alert("There were errors:\n" + errorMessages);
                });
            });
            // Obsługa kliknięcia w przycisk "Add Rental"
             $(document).on('click', '#add-rental-link', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony

                // Wywołanie żądania GET do kontrolera Admin/CreateRental
                $.get('@Url.Action("CreateRental", "Admin")', function (data) {
                    $('#dataContainer').html(data); // Załaduj formularz do kontenera
                }).fail(function () {
                    alert("Failed to load the form. Please try again.");
                });
            });
            // Obsługa wysyłania formularza dodawania użytkownika
            $(document).on('submit', '#rentalCreateForm', function (e) {
                e.preventDefault(); // Zapobiega przeładowaniu strony
                const form = $(this);

                // Wysłanie formularza jako POST
                $.post(form.attr('action'), form.serialize(), function (response) {
                    // Po dodaniu wypożyczenia, załaduj zaktualizowaną tabelę wypożyczeń
                    $.get('@Url.Action("Rentals", "Admin")', function (data) {
                        $('#dataContainer').html(data); // Załaduj listę wypożyczeń po dodaniu
                    }).fail(function () {
                        alert("Failed to load updated rental list.");
                    });
                }).fail(function (response) {
                    // Jeśli formularz nie przeszedł walidacji, wyświetl błędy
                    const errors = response.responseJSON;
                    let errorMessages = '';
                    for (const field in errors) {
                        if (errors.hasOwnProperty(field)) {
                            errorMessages += errors[field].join('<br/>');
                        }
                    }
                    alert("There were errors:\n" + errorMessages);
                });
            });
        });

        // Edycja jachtu
        $(document).on("click", ".edit-yacht-link", function (e) {
            e.preventDefault();
            const url = $(this).attr("href");

            $.get(url, function (data) {
                $("#dataContainer").html(data); // Załaduj formularz edycji
            }).fail(function () {
                alert("Failed to load the edit form. Please try again.");
            });
        });

               $(document).on("submit", "#yachtEditForm", function (e) {
            e.preventDefault();
            const form = $(this);

            $.post(form.attr("action"), form.serialize(), function (response) {
                $("#dataContainer").html(response); // Zwraca listę lub formularz z błędami
            }).fail(function (xhr, status, error) {
                alert("Błąd podczas zapisu: " + error);
                console.error("Status:", status);
                console.error("Response:", xhr.responseText);
            });
        });

        // Usuwanie jachtu
        $(document).on("click", ".delete-yacht-link", function (e) {
            e.preventDefault();
            if (!confirm("Are you sure you want to delete this yacht?")) {
                return;
            }

            const url = $(this).attr("href");

            $.post(url, function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to delete the car. Please try again.");
            });
        });
        // Edycja lokalizacji
        $(document).on("click", ".edit-location-link", function (e) {
            e.preventDefault();
            const url = $(this).attr("href");

            $.get(url, function (data) {
                $("#dataContainer").html(data); // Załaduj formularz edycji
            }).fail(function () {
                alert("Failed to load the edit form. Please try again.");
            });
        });

        $(document).on("submit", "#locationEditForm", function (e) {
            e.preventDefault();
            const form = $(this);

            $.post(form.attr("action"), form.serialize(), function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to save changes. Please try again.");
            });
        });

        // Usuwanie jachtu
        $(document).on("click", ".delete-location-link", function (e) {
            e.preventDefault();
            if (!confirm("Are you sure you want to delete this car?")) {
                return;
            }

            const url = $(this).attr("href");

            $.post(url, function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to delete the car. Please try again.");
            });
        });
        // Edycja użytkownika
        $(document).on("click", ".edit-user-link", function (e) {
            e.preventDefault();
            const url = $(this).attr("href");

            $.get(url, function (data) {
                $("#dataContainer").html(data);
            }).fail(function () {
                alert("Failed to load the edit form. Please try again.");
            });
        });
        $(document).on("submit", "#userEditForm", function (e) {
            e.preventDefault();
            const form = $(this);

            $.post(form.attr("action"), form.serialize(), function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to save changes. Please try again.");
            });
        });
        // Usuwanie użytkownika
        $(document).on("click", ".delete-user-link", function (e) {
            e.preventDefault();
            if (!confirm("Are you sure you want to delete this user?")) {
                return;
            }

            const url = $(this).attr("href");

            $.post(url, function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to delete the user. Please try again.");
            });
        });
        // Edycja wypożyczenia
        $(document).on("click", ".edit-rental-link", function (e) {
            e.preventDefault();
            const url = $(this).attr("href");

            $.get(url, function (data) {
                $("#dataContainer").html(data);
            }).fail(function () {
                alert("Failed to load the edit form. Please try again.");
            });
        });
        $(document).on("submit", "#rentalEditForm", function (e) {
            e.preventDefault();
            const form = $(this);

            $.post(form.attr("action"), form.serialize(), function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to save changes. Please try again.");
            });
        });
        // Usuwanie wypożyczenia
        $(document).on("click", ".delete-rental-link", function (e) {
            e.preventDefault();
            if (!confirm("Are you sure you want to delete this rental?")) {
                return;
            }

            const url = $(this).attr("href");

            $.post(url, function (response) {
                $("#dataContainer").html(response); // Załaduj zaktualizowaną listę
            }).fail(function () {
                alert("Failed to delete the rental. Please try again.");
            });
        });
    </script>
}